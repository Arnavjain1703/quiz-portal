# Generated by Django 2.0.6 on 2020-07-31 08:55

import ckeditor_uploader.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Additional',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('on_or_off', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='AdditionalQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', ckeditor_uploader.fields.RichTextUploadingField()),
            ],
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('std_no', models.CharField(blank=True, max_length=7, null=True, validators=[django.core.validators.RegexValidator(code='400', message='Invalid Student Number', regex='^\\d{7}$')])),
                ('university_roll_no', models.CharField(max_length=13, unique=True)),
                ('email', models.CharField(max_length=40, unique=True)),
                ('father', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator(regex='^[56789]\\d{9}$')])),
                ('branch', models.CharField(blank=True, max_length=5, null=True)),
                ('skills', models.CharField(blank=True, max_length=255, null=True)),
                ('designer', models.CharField(blank=True, max_length=255, null=True)),
                ('hosteler', models.CharField(blank=True, max_length=3, null=True)),
                ('test_name', models.CharField(blank=True, max_length=100, null=True)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('year', models.CharField(max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=225)),
                ('total_question_display', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='CategoryMarks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correct', models.IntegerField(default=0)),
                ('incorrect', models.IntegerField(default=0)),
                ('unanswered', models.IntegerField(default=0)),
                ('marks', models.IntegerField(default=0)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Candidate')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Category')),
            ],
            options={
                'verbose_name_plural': 'Cateogory Marks',
            },
        ),
        migrations.CreateModel(
            name='Instruction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instruction', ckeditor_uploader.fields.RichTextUploadingField()),
            ],
            options={
                'verbose_name_plural': 'Instructions',
            },
        ),
        migrations.CreateModel(
            name='Marks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.IntegerField()),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Candidate')),
            ],
            options={
                'verbose_name_plural': 'Marks',
            },
        ),
        migrations.CreateModel(
            name='Practice_Candidate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(default='', max_length=10)),
                ('test_name', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Practice-Candidates',
            },
        ),
        migrations.CreateModel(
            name='Practice_SelectedAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_choice', models.IntegerField(blank=True, null=True)),
                ('status', models.PositiveIntegerField(default=1)),
                ('key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate', to='core.Practice_Candidate')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', ckeditor_uploader.fields.RichTextUploadingField()),
                ('choice1', ckeditor_uploader.fields.RichTextUploadingField()),
                ('choice2', ckeditor_uploader.fields.RichTextUploadingField()),
                ('choice3', ckeditor_uploader.fields.RichTextUploadingField()),
                ('choice4', ckeditor_uploader.fields.RichTextUploadingField()),
                ('correct_choice', models.PositiveIntegerField()),
                ('negative', models.BooleanField(default=True)),
                ('negative_marks', models.IntegerField(default=1)),
                ('marks', models.IntegerField(default=4, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Category')),
            ],
        ),
        migrations.CreateModel(
            name='SelectedAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_choice', models.IntegerField(blank=True, null=True)),
                ('status', models.PositiveIntegerField(default=1)),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Candidate')),
                ('question_text', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Question')),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(max_length=100, unique=True)),
                ('duration', models.PositiveIntegerField()),
                ('on_or_off', models.BooleanField()),
                ('negative', models.BooleanField(default=False)),
                ('std_no', models.BooleanField(default=False)),
                ('father_name', models.BooleanField(default=False)),
                ('phone_number', models.BooleanField(default=False)),
                ('branch', models.BooleanField(default=False)),
                ('skills', models.BooleanField(default=False)),
                ('designer', models.BooleanField(default=False)),
                ('hosteler', models.BooleanField(default=False)),
                ('year', models.BooleanField(default=False)),
                ('university_roll_no', models.BooleanField(default=False)),
                ('practice', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Unique_ID',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(default='', max_length=10)),
            ],
        ),
        migrations.AddField(
            model_name='practice_selectedanswer',
            name='question_text',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question', to='core.Question'),
        ),
        migrations.AddField(
            model_name='marks',
            name='test_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Test'),
        ),
        migrations.AddField(
            model_name='instruction',
            name='test',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.Test'),
        ),
        migrations.AddField(
            model_name='categorymarks',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Test'),
        ),
        migrations.AddField(
            model_name='category',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Test'),
        ),
        migrations.AddField(
            model_name='additional',
            name='additional_question',
            field=models.ManyToManyField(to='core.AdditionalQuestion'),
        ),
        migrations.AddField(
            model_name='additional',
            name='test_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Test'),
        ),
        migrations.AlterUniqueTogether(
            name='categorymarks',
            unique_together={('candidate', 'category')},
        ),
    ]
